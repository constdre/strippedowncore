@{ 

    bool isError = (bool)ViewData["isError"];
    string email = "";
    if (ViewBag.statusMessage != null)
    {
        email = ViewBag.statusMessage.Split(" ")[0];
    }

}

<div class="container-horizontal">


    <div class="container-access">

        <div class="tab">
            <button class="tablink tablink--active" id="tab_login" onclick="switchToLogin()">Sign-in</button><button class="tablink" id="tab_register" onclick="switchToRegister()">Register</button>
        </div>
        <div class="form-container">

            <div id="div_login" class="div-form-account">
                <div class="div-status div-status--green" hidden>
                    <p id="p_status" class="div-status__text">@ViewBag.statusMessage</p>
                </div>
                <form id="form_login" method="post" action="/Accounts/Access/Login">

                    <div>
                        <label class="field-label" for="email">Email</label>
                        <div class="field-input-wrapper">
                            <input id="txt_email" class="field-input" id="email" name="email" />
                        </div>

                    </div>
                    <div class="next-field">
                        <label class="field-label" for="password">Password</label>
                        <div class="field-input-wrapper">
                            <input class="field-input" id="password" type="password" name="password" />
                        </div>
                    </div>

                    <div class="next-field">
                        <div><a class="forgot-p" href="#">Forgot Password?</a></div>

                    </div>

                    <div class="form-actions-container">
                        <button id="btn_login" type="submit" class="btn">Login</button>
                    </div>

                </form>
            </div>


            <div id="div_register" class="div-form-account hidden-element">
                <div class="div-status div-status--red" hidden>
                    <p id="status_register" class="div-status__text">@ViewBag.statusMessage</p>
                </div>
                <form id="form_register" method="post" action="@Url.Action("Register","Access", new { AreaAttribute="Accounts"})">

                    <div id="div-accountinfo" class="div-flex-col">
                        @*<p class="form-header"><b>Account Info</b></p>*@
                        <div>
                            <label for="name" class="field-label">Name</label>
                            <div class="field-input-wrapper">
                                <input class="field-input" id="name" name="name" />
                            </div>
                        </div>
                        <div class="next-field">
                            <label for="email" class="field-label">Email</label>
                            <div class="field-input-wrapper">
                                <input class="field-input" id="email" name="email" />
                            </div>
                        </div>
                        <div class="next-field">
                            <label for="password" class="field-label">Password</label>
                            <div class="field-input-wrapper">
                                <input class="field-input" id="password" type="password" name="password" />
                            </div>
                        </div>
                        <div class="next-field">
                            <label for="repeat_pass" class="field-label">Repeat password</label>
                            <div class="field-input-wrapper">
                                <input class="field-input" id="repeat_pass" name="repeat_pass" type="password" />
                            </div>
                        </div>
                        <div class="next-field">
                            <label for="phone" class="field-label">Phone</label>
                            <div class="field-input-wrapper">
                                <input class="field-input" id="phoneno" name="phoneno" />
                            </div>
                        </div>
                    </div>


                    @*<p class="form-header"><b>Shipping Address</b></p>
                        <div>
                            <label for="street" class="field-label">Street</label>
                            <div class="field-input-wrapper">
                            <input class="field-input" id="street" name="street" />
                            </div>
                        </div>
                        <div class="next-field">
                            <label for="country" class="field-label">Country</label>
                            <div class="field-input-wrapper">
                            <select id="select_country" name="country" class="browser-default" onchange="showFieldsByCountry()">
                                <option value="default" selected disabled>Choose here</option>
                                <option value="Philippines">Philippines</option>
                                <option value="USA">United States</option>
                            </select>
                            </div>
                        </div>
                        <div class="next-field">
                            <label for="city" class="field-label">City</label>
                            <div class="field-input-wrapper">
                            <input class="field-input" id="city" name="city" />
                            </div>
                        </div>
                        <div id="p_state" class="hidden-element next-field">
                            <label for="state" class="field-label">State</label>
                            <div class="field-input-wrapper">
                            <input class="field-input" id="state" name="state" />
                            </div>
                        </div>
                        <div class="next-field">
                            <label for="zip" class="field-label">Zip Code</label>
                            <div class="field-input-wrapper">
                            <input class="field-input" id="zip" name="zip" />
                            </div>
                        </div>*@

                    <div class="form-actions-container">
                        <button id="btn_register" class="btn">Register</button>
                        <button class="btn inline-margin-left" id="btn_reset" type="button">Reset</button>
                    </div>

                </form>
            </div>
        </div>
    </div>

    <div class="container-other">
        <p>*coming soon*</p>
    </div>
</div>
<script type="text/javascript">

    var pStatus = document.getElementById("p_status");
    var statusRegister = document.getElementById("status_register");
    var txtEmail = document.getElementById("txt_email");
    //displays it
    if (pStatus.textContent != "") {
        console.log("status is not empty, show it.");
        pStatus.parentNode.hidden = false;
        @if (isError)
        {
            <text>pStatus.parentNode.classList.add("div-status--red")</text>
        }
        else
        {
            <text>txtEmail.value="@email"</text>
        }
    }

    var page = (function () {
        return {
            divLogin: document.getElementById("div_login"),
            tabLogin: document.getElementById("tab_login"),
            tabRegister: document.getElementById("tab_register"),
            register: document.getElementById("div_register"),
            loginForm: document.getElementById("form_login"),
            registerForm: document.getElementById("form_register"),
            countryElement: document.getElementById("select_country"),
            pState: document.getElementById("p_state")
        };
    })();

    page.loginForm.addEventListener("submit", function (e) {
        return validateFormFields(this, e);
    });
    page.registerForm.addEventListener("submit", function (e) {
        return validateFormFields(this, e);
    });

    function validateFormFields(form, e) {
        var isValidFields = true;
        var status = (form.id == "form_login") ? pStatus : statusRegister;
        var elements = form.elements;
        for (var i = 0; i < elements.length; i++) {

            var item = elements[i];
            var isRedAlready = item.classList.contains("field-error");

            console.log("Element tagname: " + item.tagName);

            if (item.tagName != "INPUT" && item.tagName != "SELECT") {
                console.log("Not a relevant element: " + item.nodeName);
                continue;
            }

            //check if field is empty:
            var itemValue = item.tagName === "SELECT" ? item.options[item.selectedIndex].value : item.value;
            if (!item.value || itemValue === "default") {
                item.classList.add("field-error");
                isValidFields = false;
            }
            if (item.value && isRedAlready) {
                item.classList.remove("field-error");
            }
        }

        if (!isValidFields) {
            e.preventDefault();//prevent submit of form to server
            if (status.parentNode.classList.contains("div-status--green")) {
                status.parentNode.classList.remove("div-status--green");
                status.parentNode.classList.add("div-status--red");

            }
            status.textContent = "Please fill-out the required fields.";
            status.parentNode.hidden = false;
        }
        return isValidFields;
    }


    function switchToRegister() {

        //show register and hide login form
        page.divLogin.classList.add("hidden-element");
        page.tabLogin.classList.remove("tablink--active");


        page.register.classList.remove("hidden-element");
        page.register.classList.add("form-register")
        page.tabRegister.classList.add("tablink--active");

    }

    function switchToLogin() {

        //show login and hide register form
        page.register.classList.add("hidden-element");
        page.tabRegister.classList.remove("tablink--active");
        page.register.classList.remove("form-register")


        page.divLogin.classList.remove("hidden-element");
        page.tabLogin.classList.add("tablink--active");



        //set the default country option again:
        page.countryElement.options[0].selected = true;
        page.pState.classList.add("hidden-element");

    }

    function showFieldsByCountry() {

        var country = page.countryElement.value;

        if (country === "USA") {
            page.pState.classList.remove("hidden-element");
        } else {
            page.pState.classList.add("hidden-element");
        }
    }

    var reset = document.getElementById("btn_reset");
    reset.onclick = function () {
        statusRegister.parentNode.hidden = true;
        page.registerForm.reset();
        var elements = page.registerForm.elements;
        for (var i = 0; i < elements.length; i++) {
            var elem = elements[i];
            if (elem.classList.contains("field-error")) {
                elem.classList.remove("field-error");
            }
        }
    }



</script>


